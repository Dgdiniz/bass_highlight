{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "asm",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"match": "\\b(arch|architecture|array|array.size|array.sort|assert|base|binary:|char:|constant|copy|db|dd|define|defined|delete|dequeue|dl|dq|ds|dw|else|endian|enqueue|error|evaluate|expression|file.size|file.exists|fill|float32|float64|function|global|hex:|include|inline|insert|macro|map|namespace|notice|origin|output|parent|print|pullvar|pushvar|putchar|read|scope|tracker|variable|warning|while)\\b",
			"name": "variable.parameter"
		},
		{
			"match": "\\b(adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|bra|brk|brl|bvc|bvs|clc|cld|cli|clv|cmp|cop|cpx|cpy|dea|dec|dex|dey|eor|ina|inc|inx|iny|jml|jmp|jsl|jsr|lda|ldx|ldy|lsr|mvn|mvp|nop|ora|pea|pei|per|pha|phb|phd|phk|php|phx|phy|pla|plb|pld|plp|plx|ply|rep|rol|ror|rti|rtl|rts|sbc|sec|sed|sei|sep|sta|stp|stx|sty|stz|swa|tad|tas|tax|tay|tcd|tcs|tda|tdc|trb|tsa|tsb|tsc|tsx|txa|txs|txy|tya|tyx|wai|wdm|xba|xce)\\b",
			"name": "support.function"
		},
		{
			"match": "\\b[_a-z][_a-z0-9.]*:?",
			"name": "variable.language"
		},
		{
			"name": "comment.line.double-slash",
			"begin": "//",
			"end": "$",
			"captures": {
				"0": {
					"name": "punctuation.definition.comment"
				}
			},
			"patterns": [
				{
					"match": "\\b(todo|fixme|xxx|warning|danger|note|notice|bug|author|date)\\b",
					"name": "keyword.other.documentation"
				}
			]
		},
		{
			"name": "comment.block",
			"begin": "if 0 {",
			"end": "}",
			"contentName": "comment.block",
			"patterns": [
				{
					"match": "\\b(todo|fixme|xxx|warning|danger|note|notice|bug|author|date)\\b",
					"name": "keyword.other.documentation"
				}
			]
		},
		{
			"name": "string.quoted.double",
			"begin": "\"",
			"end": "\"|$",
			"captures": {
				"0": {
					"name": "punctuation.definition.string"
				}
			}
		},
		{
			"name": "string.quoted.single",
			"begin": "'",
			"end": "'|$",
			"captures": {
				"0": {
					"name": "punctuation.definition.string"
				}
			}
		},
		{
			"match": "\\b(x|y|a|s)\\b",
			"name": "variable.language"
		},
		{
			"match": "\\$(?:\\h)+|(?:0x\\h+)|(?:\\d+)|%(?:[01]+)|0b[01]+|0o[0-7]+",
			"name": "constant.numeric"
		},
		{
			"match": "[+-/*<>=&|^!~]",
			"name": "keyword.operator"
		},
		{
			"match": "\\b(REG_INIDISP|REG_OBSEL|REG_OAMADDL|REG_OAMADDH|REG_OAMDATA|REG_BGMODE|REG_MOSAIC)\\b",
			"name": "variable.language"
		},
		{
			"match": "#",
			"name": "constant.numeric"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.asm",
					"match": "\\b(if|for|return)\\b"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.asm",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.asm",
					"match": "\\\\."
				}
			]
		}
	},
	"scopeName": "source.bass"
}